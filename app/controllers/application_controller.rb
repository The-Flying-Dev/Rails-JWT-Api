class ApplicationController < ActionController::API
  #call this method first if any request is made to the api
  before_action :authorized

  #returns token generated by the JWT
  def encode_token(payload)
    JWT.encode(payload, 's3cr3t') #jwt gem method
  end

  def auth_header 
    request.headers['Authorization'] #key of generated token
  end

  def decoded_token 
    if auth_header 
      token = auth_header.split(' ')[1]
      begin   
        JWT.decode(token, 's3cr3t', true, algorithm: 'HS256')
      rescue JWT::DecodeError
        nil 
      end
    end
  end

  def logged_in_user 
    if decoded_token
      user_id = decoded_token[0]['user_id'] #first index with key
      @user = User.find_by(id: user_id) #checks to see if user exists in the database
    end
  end

  #returns true or false depending on the return value of the method inside
  def logged_in? 
    !!logged_in_user
  end

  #sends json response if user is not logged in or credentials is not sent but logged_in is called to determine that first
  def authorized
    render json: { message: 'Please log in'}, status: :unauthorized unless logged_in?
  end

end
